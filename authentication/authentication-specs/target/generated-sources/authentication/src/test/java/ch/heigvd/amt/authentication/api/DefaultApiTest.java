/*
 * Authentication api
 * An API for authentication purposes
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.heigvd.amt.authentication.api;

import ch.heigvd.amt.authentication.ApiException;
import ch.heigvd.amt.authentication.dto.Credentials;
import ch.heigvd.amt.authentication.dto.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * the admin block a user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void blockUserTest() throws ApiException {
        String eMail = null;
        api.blockUser(eMail);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        User user = null;
        api.createUser(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * deletes a single user based on the e_mail supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String eMail = null;
        api.deleteUser(eMail);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get the list of users
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        List<User> response = api.getUsers();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * have access to ressources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        Credentials credentials = null;
        api.login(credentials);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * the admin block a user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unblockUserTest() throws ApiException {
        String eMail = null;
        api.unblockUser(eMail);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * updates a single user based on the e_mail supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        String eMail = null;
        User response = api.updateUser(eMail);

        // TODO: test validations
    }
    
}
