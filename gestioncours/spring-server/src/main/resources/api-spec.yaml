openapi: '3.0.0'
info:
  title: Authentication api
  description: An API for authentication
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-oas3
servers:
  - url: https://localhost:8080/gestionCours
paths:
  /subjects:
    post:
      operationId: createSubject
      description: create a new subject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]
    get:
      description: get the list of all subjects
      operationId: getSubjects
      parameters:
        - in: query
          name: page
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: number of elements per page
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
          links:
            NextLink:
              $ref: '#/components/links/PaginateAllSubjects'
            LastLink:
              $ref: '#/components/links/PaginateAllSubjects'
            FirstLink:
              $ref: '#/components/links/PaginateAllSubjects'
            PrevLink:
              $ref: '#/components/links/PaginateAllSubjects'
        '401':
          description: unexpected error
      security:
        - bearerAuth: [ ]
  /subjects/{id}:
    get:
      description: gets a single subject based on the ID supplied
      operationId: getASubject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            description: The user ID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]
    put:
      operationId: UpdateSubject
      description: update a subject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]
    delete:
      description: delete an existing subject base on the ID supplied
      operationId: deleteSubject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
        default:
          description: unexpected error
      security:
        - bearerAuth: [ ]

  /enrollments:
    post:
      operationId: createEnrollment
      description: create an Enrollment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]
    get:
      description: get the list of all enrollments
      operationId: getEnrollments
      parameters:
        - in: query
          name: page
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: number of elements per page
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
          links:
            NextLink:
              $ref: '#/components/links/PaginateAllEnrollments'
            LastLink:
              $ref: '#/components/links/PaginateAllEnrollments'
            FirstLink:
              $ref: '#/components/links/PaginateAllEnrollments'
            PrevLink:
              $ref: '#/components/links/PaginateAllEnrollments'
        '401':
          description: unexpected error
      security:
        - bearerAuth: [ ]

  /enrollments/{id}:
    get:
      description: Returns an enrollment based on a single ID
      operationId: get enrollment by id
      parameters:
        - name: id
          in: path
          description: ID of enrollment to fetch
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        default:
          description: unexpected error
      security:
        - bearerAuth: [ ]

    delete:
      description: delete a single enrollment on the ID supplied
      operationId: deleteEnrollment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
        default:
          description: unexpected error
      security:
        - bearerAuth: [ ]

    put:
      operationId: UpdateEnrollment
      description: update an Enrollment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]
  /labos:
    post:
      operationId: createLabo
      description: create a Labo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Labo'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labo'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]

    get:
      description: get the list of all Labos
      operationId: getLabos
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Labo'
        '401':
          description: unexpected error
      security:
        - bearerAuth: [ ]
    delete:
      description: delete a single labo on the name supplied
      operationId: deleteLabo
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
        default:
          description: unexpected error
      security:
        - bearerAuth: [ ]
    put:
      operationId: UpdateLabo
      description: update an Labo
      parameters:
        - in: path
          name: laboName
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Labo'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labo'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
      security:
        - bearerAuth: [ ]
components:
  securitySchemes:
    bearerAuth:
      description: "Give the token at each user"
      type: apiKey
      name: Authorization
      in: header
  links:
    PaginateAllEnrollments:
      description: >
        This link with grab another set of Enrollments
      operationId: getEnrollments
      parameters:
        page: '$request.path.page'
        pageSize: '$request.path.page'
    PaginateAllSubjects:
      description: >
        This link with grab another set of Subjects
      operationId: getAllSubjects
      parameters:
        page: '$request.path.page'
        pageSize: '$request.path.page'
  schemas:
    Subject:
      type: object
      required:
        - name
        - credits_etcs
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        credits_etcs:
          type: integer
          format: int64
    SubjectList:
      allOf:
        - $ref: '#/components/schemas/Subject'
        - type: object
          properties:
            id:
              type : integer
              format: int64
    Enrollment:
      type: object
      required:
        - subject_id
        - user_email
      properties:
        id:
          type: integer
          format: int64
        subject_id:
          type: integer
          format: int64
        user_email:
          type: string
    EnrollmentList:
      allOf:
        - $ref: '#/components/schemas/Enrollment'
        - type: object
          properties:
            id:
              type: integer
              format: int64
    Labo:
      type: object
      required:
        - labo_name
        - ponderation
      properties:
        labo_name:
          type: string
        ponderation:
          type: integer
          format: int32
    LaboList:
      allOf:
        - $ref: '#/components/schemas/Labo'
        - type: object
          properties:
            name:
              type: string
            ponderation:
              type: integer
              format: int64
