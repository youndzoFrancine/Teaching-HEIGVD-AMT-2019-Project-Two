openapi: '3.0.0'
info:
  title: Authentication api
  description: An API for authentication
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-oas3
servers:
  - url: https://localhost:8080/gestionCours
paths:
  /subjects:
    post:
      operationId: createSubject
      description: create a subject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '201':
          description: created
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
    get:
      description: get the list of all subjects
      operationId: getSubjects
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectList'
        '401':
          description: unexpected error
  /subjects/{id}:
    get:
      description: gets a single subject based on the ID supplied
      operationId: getASubject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            description: The user ID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectList'
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
    delete:
      description: delete a single subject on the ID
      operationId: deleteSubject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: subject deleted
        default:
          description: unexpected error

  /enrollments:
    post:
      operationId: createEnrollment
      description: create an Enrollment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '201':
          description: created
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
    get:
      description: get the list of all enrollments
      operationId: getEnrollments
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrollmentList'
        '401':
          description: unexpected error

  /enrollments/{id}:

    get:
      description: Returns an enrollment based on a single ID
<<<<<<< HEAD
      operationId: find enrollment by id
=======
      operationId: get enrollment by id
>>>>>>> 63dd7b6021b3903ddab9bf1535649138ff826dc5
      parameters:
        - name: id
          in: path
          description: ID of enrollment to fetch
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: enrollment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
        default:
          description: unexpected error
<<<<<<< HEAD

=======
>>>>>>> 63dd7b6021b3903ddab9bf1535649138ff826dc5
    delete:
      description: delete a single enrollment on the ID supplied
      operationId: deleteEnrollment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: enrollment deleted
        default:
          description: unexpected error

  /labos:
    post:
      operationId: createLabo
      description: create a Labo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Labo'
      responses:
        '201':
          description: created
        '401':
          description: unexpected error
        '403':
          description: forbidden
        '404':
          description: not found
    get:
      description: get the list of all Labos
      operationId: getLabos
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Labo'
        '401':
          description: unexpected error


components:
  schemas:
    Subject:
      type: object
      properties:
        name:
          type: string
        credits_etcs:
          type: integer
          format: int64
    SubjectList:
      allOf:
        - $ref: '#/components/schemas/Subject'
        - type: object
          properties:
            id:
              type : integer
              format: int64
    User:
      type: object
      properties:
        e_mail:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        user_role:
          type: string
    Enrollment:
      type: object
      required:
        - subject_id
<<<<<<< HEAD
        - student_email
=======
        - user_email
>>>>>>> 63dd7b6021b3903ddab9bf1535649138ff826dc5
      properties:
        subject_id:
          type: integer
          format: int64
<<<<<<< HEAD
        student_email:
=======
        user_email:
>>>>>>> 63dd7b6021b3903ddab9bf1535649138ff826dc5
          type: string
    EnrollmentList:
      allOf:
        - $ref: '#/components/schemas/Enrollment'
        - type: object
          properties:
            id:
              type: integer
              format: int64
    Labo:
      type: object
      required:
        - labo_name
        - ponderation
      properties:
        labo_name:
          type: string
        ponderation:
          type: integer
          format: int64